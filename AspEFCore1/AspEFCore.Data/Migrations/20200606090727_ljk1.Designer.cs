// <auto-generated />
using AspEFCore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AspEFCore.Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20200606090727_ljk1")]
    partial class ljk1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AspEFCore.Model.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("AspEFCore.Model.CClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("CClasss");
                });

            modelBuilder.Entity("AspEFCore.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("ProductId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("AspEFCore.Model.OrderProduct", b =>
                {
                    b.Property<int>("OrderId");

                    b.Property<int>("ProductId");

                    b.Property<int>("Id");

                    b.HasKey("OrderId", "ProductId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("AspEFCore.Model.OrderUser", b =>
                {
                    b.Property<int>("OrderId");

                    b.Property<int>("UserId");

                    b.Property<int>("Id");

                    b.HasKey("OrderId", "UserId");

                    b.ToTable("OrderUser");
                });

            modelBuilder.Entity("AspEFCore.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CClassId");

                    b.Property<string>("Name");

                    b.Property<int>("Number");

                    b.Property<double>("Price");

                    b.HasKey("Id");

                    b.HasIndex("CClassId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("AspEFCore.Model.ProductCClass", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("CClassId");

                    b.Property<int>("Id");

                    b.HasKey("ProductId", "CClassId");

                    b.ToTable("ProductCClass");
                });

            modelBuilder.Entity("AspEFCore.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AspEFCore.Model.Order", b =>
                {
                    b.HasOne("AspEFCore.Model.Product", "Prodeuct")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AspEFCore.Model.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AspEFCore.Model.OrderProduct", b =>
                {
                    b.HasOne("AspEFCore.Model.Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AspEFCore.Model.OrderUser", b =>
                {
                    b.HasOne("AspEFCore.Model.Order")
                        .WithMany("OrderUsers")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AspEFCore.Model.Product", b =>
                {
                    b.HasOne("AspEFCore.Model.CClass", "CClass")
                        .WithMany("Products")
                        .HasForeignKey("CClassId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AspEFCore.Model.ProductCClass", b =>
                {
                    b.HasOne("AspEFCore.Model.Product")
                        .WithMany("ProductCClasss")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
